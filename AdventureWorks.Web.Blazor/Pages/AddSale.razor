@page "/sales/add"
@page "/sales/edit/{salesOrderId:int}"

@using AdventureWorks.Models
@using AdventureWorks.Models.Models
@using AdventureWorks.Web.Api.Client

@inject NavigationManager NavigationManager

<h3>@Title Sale</h3>

<EditForm Model=@sale OnValidSubmit="SaveSale">
    <DataAnnotationsValidator />

    <ValidationSummary />

    <div class="mb-3">
        <label for="SalesOrderID" class="form-label">Sales Order ID</label>
        <div class="col-md-4">
            <InputNumber class="form-control" @bind-Value="sale.SalesOrderID" id="SalesOrderID" />
            <ValidationMessage For="@(() => sale.SalesOrderID)" />
        </div>
    </div>
    <div class="mb-3">
        <label for="OrderDate" class="form-label">Order Date</label>
        <div class="col-md-4">
            <InputDate class="form-control" @bind-Value="sale.OrderDate" />
            <ValidationMessage For="@(() => sale.OrderDate)" />
        </div>
    </div>
    <div class="mb-3">
        <label for="BillToAddressID" class="form-label">Bill To Address ID</label>
        <div class="col-md-4">
            <InputNumber class="form-control" @bind-Value="sale.BillToAddressID" id="BillToAddressID" />
            <ValidationMessage For=@(() => sale.BillToAddressID) />
        </div>
    </div>
    <div class="mb-3">
        <label for="ShipToAddressID" class="form-label">Ship To Address ID</label>
        <div class="col-md-4">
            <InputNumber class="form-control" @bind-Value="sale.ShipToAddressID" />
            <ValidationMessage For=@(() => sale.ShipToAddressID) />
        </div>
    </div>
    <div class="mb-3">
        <label for="SalesOrderNumber" class="form-label">Sales Order Number</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="sale.SalesOrderNumber" />
            <ValidationMessage For=@(() => sale.SalesOrderNumber) />
        </div>
    </div>
    <div class="mb-3">
        <label for="TotalDue" class="form-label">Sub Total</label>
        <div class="col-md-4">
            <InputNumber class="form-control" @bind-Value="sale.SubTotal" />
            <ValidationMessage For=@(() => sale.SubTotal) />
        </div>
    </div>
    <div class="mb-3">
        <label for="TotalDue" class="form-label">Tax Amount</label>
        <div class="col-md-4">
            <InputNumber class="form-control" @bind-Value="sale.TaxAmt" />
            <ValidationMessage For=@(() => sale.TaxAmt) />
        </div>
    </div>
    <div class="mb-3">
        <label for="TotalDue" class="form-label">Freight</label>
        <div class="col-md-4">
            <InputNumber class="form-control" @bind-Value="sale.Freight" />
            <ValidationMessage For=@(() => sale.Freight) />
        </div>
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary" @onclick="(() => SaveSale())">Save</button>
        <button class="btn btn-light" @onclick="Cancel">Cancel</button>
    </div>
</EditForm>



@code {
    [Parameter]
    public int salesOrderId { get; set; }

    protected string Title = "Add";
    protected SalesOrderHeaderModel sale = new SalesOrderHeaderModel();
    protected override async Task OnParametersSetAsync()
    {
        if (salesOrderId != 0)
        {
            Title = "Edit";

            var getrequest = SalesClient.GetOneSaleClient(salesOrderId);
            sale.SalesOrderID = getrequest.SalesOrderID;
            sale.OrderDate = getrequest.OrderDate;
            sale.BillToAddressID = getrequest.BillToAddressID;
            sale.ShipToAddressID = getrequest.ShipToAddressID;
            sale.SalesOrderNumber = getrequest.SalesOrderNumber;
            sale.SubTotal = getrequest.SubTotal;
            sale.TaxAmt = getrequest.TaxAmt;
            sale.Freight = getrequest.Freight;
        }
    }
    protected async Task SaveSale()
    {
        if (salesOrderId != 0)
        {
            SalesClient.UpdateSaleClient(sale);
        }
        else
        {
            SalesClient.AddSaleClient(sale);
        }
        Cancel();
    }
    public void Cancel()
    {
        NavigationManager.NavigateTo("/sales");
    }
}