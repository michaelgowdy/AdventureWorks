@page "/employee/add"
@page "/employee/edit/{businessEntityId:int}"
@using AdventureWorks.Models
@using AdventureWorks.Models.Models
@using AdventureWorks.Web.Api.Client

@*@inject HttpClient Http*@
@inject NavigationManager NavigationManager
<h1>@Title Employee</h1>
<hr />
<EditForm Model="employee" OnValidSubmit="SaveEmployee">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="BusinessEntityID" class="form-label">Business Entity ID</label>
        <div class="col-md-4">
            <InputNumber class="form-control" @bind-Value="employee.BusinessEntityID" />
        </div>
        <ValidationMessage For="@(() => employee.BusinessEntityID)" />
    </div>
    <div class="mb-3">
        <label for="FirstName" class="form-label">First Name</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="employee.FirstName" />
        </div>
        <ValidationMessage For="@(() => employee.FirstName)" />
    </div>
    <div class="mb-3">
        <label for="LastName" class="form-label">Last Name</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="employee.LastName" />
        </div>
        <ValidationMessage For="@(() => employee.LastName)" />
    </div>
    <div class="mb-3">
        <label for="JobTitle" class="form-label">Job Title</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="employee.JobTitle" />
        </div>
        <ValidationMessage For="@(() => employee.JobTitle)" />
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary" @onclick="(() => SaveEmployee())">Save</button>
        <button class="btn btn-light" @onclick="(() => Cancel())">Cancel</button>
    </div>
</EditForm>


@code {
    [Parameter]
    public int businessEntityId { get; set; }

    protected string Title = "Add";
    protected FullEmployeeModel employee = new FullEmployeeModel();
    protected override async Task OnParametersSetAsync()
    {
        if (businessEntityId != 0)
        {
            Title = "Edit";
            var getrequest = EmployeeClient.GetOneEmployeeClient(businessEntityId);
            employee.BusinessEntityID = getrequest.BusinessEntityID;
            employee.FirstName = getrequest.FirstName;
            employee.LastName = getrequest.LastName;
            employee.JobTitle = getrequest.JobTitle;
        }
    }
    protected async Task SaveEmployee()
    {
        if (employee.BusinessEntityID == 0)
        {
            EmployeeClient.AddEmployeeClient(employee);
        }
        else
        {
            EmployeeClient.UpdateEmployeeClient(employee);
        }
        Cancel();
    }
    public void Cancel()
    {
        NavigationManager.NavigateTo("/employee");
    }
}