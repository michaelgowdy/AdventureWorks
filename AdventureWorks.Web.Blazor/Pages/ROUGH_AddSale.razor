@page "/sales/add/rough"
@page "/sales/edit/{salesOrderDetailId:int}/rough"

@using AdventureWorks.Models
@using AdventureWorks.Models.Models
@using AdventureWorks.Web.Api.Client

@inject NavigationManager NavigationManager

<h3>@Title Sale</h3>

<EditForm Model=@sale OnValidSubmit="SaveSale">
    <DataAnnotationsValidator />

    <ValidationSummary />

    <div class="mb-3" >
        <label for="SalesOrderID" class="form-label">Sales Order ID</label>
        <div class="col-md-4">
            <InputNumber disabled="@IsDisabled" class="form-control" @bind-Value="sale.SalesOrderID" id="SalesOrderID" />
            <ValidationMessage For="@(() => sale.SalesOrderID)" />
        </div>
    </div>
    <div class="mb-3">
        <label for="SalesOrderDetailID" class="form-label">Sales Order Detail ID</label>
        <div class="col-md-4">
            <InputNumber disabled="@IsDisabled" class="form-control" @bind-Value="sale.SalesOrderDetailID" id="SalesOrderDetailID" />
            <ValidationMessage For="@(() => sale.SalesOrderDetailID)" />
        </div>
    </div>
    <div class="mb-3">
        <label for="OrderDate" class="form-label">Order Date</label>
        <div class="col-md-4">
            <InputDate class="form-control" @bind-Value="sale.OrderDate" />
            <ValidationMessage For="@(() => sale.OrderDate)" />
        </div>
    </div>
    <div class="mb-3">
        <label for="BillToAddressID" class="form-label">Bill To Address ID</label>
        <div class="col-md-4">
            <InputNumber class="form-control" @bind-Value="sale.BillToAddressID" id="BillToAddressID" />
            <ValidationMessage For=@(() => sale.BillToAddressID) />
        </div>
    </div>
    <div class="mb-3">
        <label for="ShipToAddressID" class="form-label">Ship To Address ID</label>
        <div class="col-md-4">
            <InputNumber class="form-control" @bind-Value="sale.ShipToAddressID" />
            <ValidationMessage For=@(() => sale.ShipToAddressID) />
        </div>
    </div>
    <div class="mb-3">
        <label for="SalesOrderNumber" class="form-label">Sales Order Number</label>
        <div class="col-md-4">
            <InputText disabled="@IsDisabled" class="form-control" @bind-Value="sale.SalesOrderNumber" />
            <ValidationMessage For=@(() => sale.SalesOrderNumber) />
        </div>
    </div>
    <div class="mb-3">
        <label for="SubTotal" class="form-label">Sub Total</label>
        <div class="col-md-4">
            <InputNumber class="form-control" @bind-Value="sale.SubTotal" />
            <ValidationMessage For=@(() => sale.SubTotal) />
        </div>
    </div>
    <div class="mb-3">
        <label for="TaxAmt" class="form-label">Tax Amount</label>
        <div class="col-md-4">
            <InputNumber class="form-control" @bind-Value="sale.TaxAmt" />
            <ValidationMessage For=@(() => sale.TaxAmt) />
        </div>
    </div>
    <div class="mb-3">
        <label for="Freight" class="form-label">Freight</label>
        <div class="col-md-4">
            <InputNumber class="form-control" @bind-Value="sale.Freight" />
            <ValidationMessage For=@(() => sale.Freight) />
        </div>
    </div>
    @*   <div class="mb-3">
        <label for="CarrierTrackingNumber" class="form-label">Carrier Tracking Number</label>
        <div class="col-md-4">
            <InputNumber class="form-control" @bind-Value="sale.CarrierTrackingNumber" />
            <ValidationMessage For=@(() => sale.CarrierTrackingNumber) />
        </div>
    </div>*@
    <div class="mb-3">
        <label for="OrderQty" class="form-label">Order Qty</label>
        <div class="col-md-4">
            <InputNumber class="form-control" @bind-Value="sale.OrderQty" />
            <ValidationMessage For=@(() => sale.OrderQty) />
        </div>
    </div>
    <div class="mb-3">
        <label for="ProductID" class="form-label">Product ID</label>
        <div class="col-md-4">
            <InputNumber class="form-control" @bind-Value="sale.ProductID" />
            <ValidationMessage For=@(() => sale.ProductID) />
        </div>
    </div>
    <div class="mb-3">
        <label for="SpecialOfferID" class="form-label">Special Offer ID</label>
        <div class="col-md-4">
            <InputNumber class="form-control" @bind-Value="sale.SpecialOfferID" />
            <ValidationMessage For=@(() => sale.SpecialOfferID) />
        </div>
    </div>
    <div class="mb-3">
        <label for="UnitPrice" class="form-label">Unit Price</label>
        <div class="col-md-4">
            <InputNumber class="form-control" @bind-Value="sale.UnitPrice" />
            <ValidationMessage For=@(() => sale.UnitPrice) />
        </div>
    </div>
    <div class="mb-3">
        <label for="UnitPriceDiscount" class="form-label">Unit Price Discount</label>
        <div class="col-md-4">
            <InputNumber class="form-control" @bind-Value="sale.UnitPriceDiscount" />
            <ValidationMessage For=@(() => sale.UnitPriceDiscount) />
        </div>
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary" @onclick="(() => SaveSale())">Save</button>
        <button class="btn btn-light" @onclick="Cancel">Cancel</button>
    </div>
</EditForm>



@code {
    [Parameter]
    public int salesOrderDetailId { get; set; }

    protected bool IsDisabled { get; set; }

    protected string Title = "Add";
    protected FullSalesModel sale = new FullSalesModel();
    protected override async Task OnParametersSetAsync()
    {
        if (salesOrderDetailId != 0)
        {
            Title = "Edit";

            IsDisabled = false;

            var getrequest = SalesClient.GetOneSaleClient(salesOrderDetailId);

            sale.SalesOrderID = getrequest.SalesOrderID;
            sale.SalesOrderDetailID = getrequest.SalesOrderDetailID;
            sale.OrderDate = getrequest.OrderDate;
            sale.BillToAddressID = getrequest.BillToAddressID;
            sale.ShipToAddressID = getrequest.ShipToAddressID;
            sale.SalesOrderNumber = getrequest.SalesOrderNumber;
            sale.SubTotal = getrequest.SubTotal;
            sale.TaxAmt = getrequest.TaxAmt;
            sale.Freight = getrequest.Freight;
            //sale.CarrierTrackingNumber = getrequest.CarrierTrackingNumber;
            sale.OrderQty = getrequest.OrderQty;
            sale.ProductID = getrequest.ProductID;
            sale.SpecialOfferID = getrequest.SpecialOfferID;
            sale.UnitPrice = getrequest.UnitPrice;
            sale.UnitPriceDiscount = getrequest.UnitPriceDiscount;
        }
        else
        {
            IsDisabled = true;
        }
    }
    protected async Task SaveSale()
    {
        if (salesOrderDetailId != 0)
        {
            SalesClient.UpdateSaleClient(sale);
        }
        else
        {
            SalesClient.AddSaleClient(sale);
        }
        Cancel();
    }
    protected void Cancel()
    {
        NavigationManager.NavigateTo("/sales");
    }
}