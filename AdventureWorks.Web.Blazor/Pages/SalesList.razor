@page "/sales"

@using AdventureWorks.Models.Models
@using AdventureWorks.Web.Api.Client

@inject NavigationManager NavigationManager

<h3>Sales List</h3>

<div class="row">
    <div class="col-md-6">
        <button class="btn btn-outline-primary" @onclick="DecreasePage">Previous Page</button>
        <button class="btn btn-outline-primary" @onclick="IncreasePage">Next Page</button>
    </div>
</div>

@if (sales == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Sales Order ID</th>
                <th>Sales Order Detail ID</th>
                <th>Bill To Address ID</th>
                <th>Ship To Address ID</th>
                <th>Sales Order Number</th>
                <th>
                    <select class="form-control" @onchange="@OnSelect" style="width:90px">
                        @foreach (var size in sizeOptions)
                        {
                            <option value=@size>@size</option>
                        }
                    </select>
                </th>
                <th>
                    <button style="float:right" class="btn btn-primary" @onclick="(() => AddSale())">
                        <i class="fas fa-sale-plus"></i>
                        Add Sale
                    </button>
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var sale in sales)
            {
                <tr>
                    <td>@sale.SalesOrderID</td>
                    <td>@sale.SalesOrderDetailID</td>
                    <td>@sale.BillToAddressID</td>
                    <td>@sale.ShipToAddressID</td>
                    <td>@sale.SalesOrderNumber</td>
                    <td></td>
                    <td>
                        <button class="btn btn-outline-dark" @onclick="(() => GetSale(sale.SalesOrderDetailID))">
                            Edit
                        </button>

                        <button class="btn btn-outline-danger" @onclick="(() => DeleteConfirm(sale.SalesOrderDetailID))">
                            Delete
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}


@code {
    protected List<FullSalesModel> sales;
    protected List<string> sizeOptions = new List<string>() { "25", "50", "100", "1000" };
    protected string selectedSize = "25";
    private int currentPage = 1;
    //protected SalesOrderHeaderModel sale;


    protected override async Task OnInitializedAsync()
    {
        sales = SalesClient.GetSalesClient(currentPage, Convert.ToInt32(selectedSize));
    }

    protected void OnSelect(ChangeEventArgs e)
    {
        selectedSize = e.Value.ToString();
        sales = SalesClient.GetSalesClient(currentPage, Convert.ToInt32(selectedSize));
    }

    private void IncreasePage()
    {
        currentPage++;
        sales = SalesClient.GetSalesClient(currentPage, Convert.ToInt32(selectedSize));
    }

    private void DecreasePage()
    {
        if (currentPage > 1)
        {
            currentPage--;
            sales = SalesClient.GetSalesClient(currentPage, Convert.ToInt32(selectedSize));
        }
    }


    protected void AddSale()
    {
        NavigationManager.NavigateTo($"sales/add");
    }

    protected void GetSale(int id)
    {
        NavigationManager.NavigateTo($"sales/edit/{id}");
        //SalesClient.GetOneSaleClient(id);
    }

    protected void DeleteConfirm(int id)
    {
        NavigationManager.NavigateTo($"sales/delete/{id}");
        //SalesClient.DeleteSaleClient(id);
    }
}