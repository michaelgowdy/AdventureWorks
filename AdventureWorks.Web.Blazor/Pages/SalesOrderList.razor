@page "/employee"


@using AdventureWorks.Models.Models
@using AdventureWorks.Web.Api.Client
@inject NavigationManager NavigationManager
@*@inject HttpClient Http
*@
<h3>Employee List</h3>

<p>This component demonstrates fetching data from a service.</p>

<div class="row">
    <div class="col-md-6">
        <a href='/employee/add' class="btn btn-primary" role="button">
            <i class="fas fa-employee-plus"></i>
            Add Employee
        </a>
    </div>
</div>


@if (employees == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Job Title</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var employee in employees)
            {
                <tr>
                    <td>@employee.BusinessEntityID</td>
                    <td>@employee.FirstName</td>
                    <td>@employee.LastName</td>
                    <td>@employee.JobTitle</td>
                    <td>
                        <button class="btn btn-outline-dark" @onclick="(() => GetUser(employee.BusinessEntityID))">
                            Edit </button>
                        
                        <button a href='/employee/delete/@employee.BusinessEntityID' class="btn btn-outline-danger">
                            Delete
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    //protected List<User> userList = new();
    //protected User user = new();
    //protected override async Task OnInitializedAsync()
    //{
    //    await GetUser();
    //}
    //protected async Task GetUser()
    //{
    //    userList = await Http.GetFromJsonAsync<List<User>>("api/User");
    //}

    protected List<FullEmployeeModel> employees;
    protected FullEmployeeModel employee;


    protected override async Task OnInitializedAsync()
    {
        employees = EmployeeClient.GetEmployeesClient();
    }

    protected void GetUser(int id)
    {
        NavigationManager.NavigateTo($"employee/edit/{id}");
        EmployeeClient.GetOneEmployeeClient(id);
    }

    protected void DeleteConfirm(int id)
    {
        EmployeeClient.DeleteEmployeeClient(id);
    }
}
